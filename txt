// Load tasks from local storage if available
const storedTasks = localStorage.getItem('tasksArray');
if (storedTasks) {
    tasksArray = JSON.parse(storedTasks);
    displayArrayValues(); // Display tasks on page load
}

// Function to save tasks array to local storage
function saveTasksToLocalStorage() {
    localStorage.setItem('tasksArray', JSON.stringify(tasksArray));
}

// Function to delete a task
function deletetask(index) {
    tasksArray.splice(index, 1);
    saveTasksToLocalStorage(); // Save tasks after deletion
    displayArrayValues();
}

// Function to edit a task
function editTask(index) {
    input.value = tasksArray[index].name;
    taskDescription.value = tasksArray[index].description;
    console.log(tasksArray[index]);
    editbtn.style.display = "block";
    add.style.display = "none";
    currentEditIndex = index;
}

// Function to edit task value
function editTaskValue() {
    tasksArray[currentEditIndex] = {
        ...tasksArray[currentEditIndex],
        name: input.value,
        description: taskDescription.value,
    };

    saveTasksToLocalStorage(); // Save tasks after edit
    displayArrayValues();
    editbtn.style.display = "none";
    add.style.display = "block";
    input.value = "";
    taskDescription.value = "";
}

// Function to handle checkbox click
function onCheckBoxClicked(e) {
    const index = e.parentElement.parentElement.dataset.index;
    const isChecked = e.checked;
    tasksArray[index].checked = isChecked;
    saveTasksToLocalStorage(); // Save tasks after checkbox click
}

// Function to add a task
function addTask() {
    if (input.value !== '') {
        tasksArray.push({
            name: input.value,
            description: taskDescription.value,
            checked: false,
        });
        saveTasksToLocalStorage(); // Save tasks after addition
        input.value = '';
        taskDescription.value = '';
        displayArrayValues();
    }
}

add.addEventListener('click', addTask);
editbtn.addEventListener('click', editTaskValue);
